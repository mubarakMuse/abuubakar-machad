{"ast":null,"code":"/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s (default: `''`).\n */\n\nimport GithubSlugger from 'github-slugger';\nimport { headingRank } from 'hast-util-heading-rank';\nimport { toString } from 'hast-util-to-string';\nimport { visit } from 'unist-util-visit';\n\n/** @type {Options} */\nconst emptyOptions = {};\nconst slugs = new GithubSlugger();\n\n/**\n * Add `id`s to headings.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSlug(options) {\n  const settings = options || emptyOptions;\n  const prefix = settings.prefix || '';\n\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    slugs.reset();\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && !node.properties.id) {\n        node.properties.id = prefix + slugs.slug(toString(node));\n      }\n    });\n  };\n}","map":{"version":3,"names":["GithubSlugger","headingRank","toString","visit","emptyOptions","slugs","rehypeSlug","options","settings","prefix","tree","reset","node","properties","id","slug"],"sources":["/Users/mubarakmuse/Abubakar-Islamic-Institute-LMS/node_modules/rehype-slug/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s (default: `''`).\n */\n\nimport GithubSlugger from 'github-slugger'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\n/** @type {Options} */\nconst emptyOptions = {}\nconst slugs = new GithubSlugger()\n\n/**\n * Add `id`s to headings.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSlug(options) {\n  const settings = options || emptyOptions\n  const prefix = settings.prefix || ''\n\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    slugs.reset()\n\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && !node.properties.id) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,aAAa,MAAM,gBAAgB;AAC1C,SAAQC,WAAW,QAAO,wBAAwB;AAClD,SAAQC,QAAQ,QAAO,qBAAqB;AAC5C,SAAQC,KAAK,QAAO,kBAAkB;;AAEtC;AACA,MAAMC,YAAY,GAAG,CAAC,CAAC;AACvB,MAAMC,KAAK,GAAG,IAAIL,aAAa,CAAC,CAAC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASM,UAAUA,CAACC,OAAO,EAAE;EAC1C,MAAMC,QAAQ,GAAGD,OAAO,IAAIH,YAAY;EACxC,MAAMK,MAAM,GAAGD,QAAQ,CAACC,MAAM,IAAI,EAAE;;EAEpC;AACF;AACA;AACA;AACA;AACA;EACE,OAAO,UAAUC,IAAI,EAAE;IACrBL,KAAK,CAACM,KAAK,CAAC,CAAC;IAEbR,KAAK,CAACO,IAAI,EAAE,SAAS,EAAE,UAAUE,IAAI,EAAE;MACrC,IAAIX,WAAW,CAACW,IAAI,CAAC,IAAI,CAACA,IAAI,CAACC,UAAU,CAACC,EAAE,EAAE;QAC5CF,IAAI,CAACC,UAAU,CAACC,EAAE,GAAGL,MAAM,GAAGJ,KAAK,CAACU,IAAI,CAACb,QAAQ,CAACU,IAAI,CAAC,CAAC;MAC1D;IACF,CAAC,CAAC;EACJ,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}