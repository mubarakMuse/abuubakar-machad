{"ast":null,"code":"import { insertTextAtPosition } from \"../../utils/InsertTextAtPosition.js\";\nimport { insertBeforeEachLine, selectLine } from \"../../utils/markdownUtils.js\";\nimport { TextAreaTextApi } from \"../../commands/index.js\";\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\nfunction handleLineMove(e, direction) {\n  stopPropagation(e);\n  var target = e.target;\n  var textArea = new TextAreaTextApi(target);\n  var selection = {\n    start: target.selectionStart,\n    end: target.selectionEnd\n  };\n  selection = selectLine({\n    text: target.value,\n    selection\n  });\n  if (direction < 0 && selection.start <= 0 || direction > 0 && selection.end >= target.value.length) {\n    return;\n  }\n  var blockText = target.value.slice(selection.start, selection.end);\n  if (direction < 0) {\n    var prevLineSelection = selectLine({\n      text: target.value,\n      selection: {\n        start: selection.start - 1,\n        end: selection.start - 1\n      }\n    });\n    var prevLineText = target.value.slice(prevLineSelection.start, prevLineSelection.end);\n    textArea.setSelectionRange({\n      start: prevLineSelection.start,\n      end: selection.end\n    });\n    insertTextAtPosition(target, blockText + \"\\n\" + prevLineText);\n    textArea.setSelectionRange({\n      start: prevLineSelection.start,\n      end: prevLineSelection.start + blockText.length\n    });\n  } else {\n    var nextLineSelection = selectLine({\n      text: target.value,\n      selection: {\n        start: selection.end + 1,\n        end: selection.end + 1\n      }\n    });\n    var nextLineText = target.value.slice(nextLineSelection.start, nextLineSelection.end);\n    textArea.setSelectionRange({\n      start: selection.start,\n      end: nextLineSelection.end\n    });\n    insertTextAtPosition(target, nextLineText + \"\\n\" + blockText);\n    textArea.setSelectionRange({\n      start: nextLineSelection.end - blockText.length,\n      end: nextLineSelection.end\n    });\n  }\n}\nexport default function handleKeyDown(e, tabSize, defaultTabEnable) {\n  if (tabSize === void 0) {\n    tabSize = 2;\n  }\n  if (defaultTabEnable === void 0) {\n    defaultTabEnable = false;\n  }\n  var target = e.target;\n  var starVal = target.value.substr(0, target.selectionStart);\n  var valArr = starVal.split('\\n');\n  var currentLineStr = valArr[valArr.length - 1];\n  var textArea = new TextAreaTextApi(target);\n\n  /**\n   * `9` - `Tab`\n   */\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    var space = new Array(tabSize + 1).join('  ');\n    if (target.selectionStart !== target.selectionEnd) {\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      var modifiedTextLine = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      var modifiedText = modifiedTextLine.join('\\n');\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd\n      });\n      var modifiedTextObj = insertBeforeEachLine(modifiedText, e.shiftKey ? '' : space);\n      var text = modifiedTextObj.modifiedText;\n      if (e.shiftKey) {\n        text = text.split('\\n').map(item => item.replace(new RegExp(\"^\" + space), '')).join('\\n');\n      }\n      textArea.replaceSelection(text);\n      var startTabSize = e.shiftKey ? -tabSize : tabSize;\n      var endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\n      textArea.setSelectionRange({\n        start: newStarNum + startTabSize,\n        end: newStarNum + oldSelectText.length + endTabSize\n      });\n    } else {\n      return insertTextAtPosition(target, space);\n    }\n  } else if (e.keyCode === 13 && e.code.toLowerCase() === 'enter' && (/^(-|\\*)\\s/.test(currentLineStr) || /^\\d+.\\s/.test(currentLineStr)) && !e.shiftKey) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    var startStr = '\\n- ';\n    if (currentLineStr.startsWith('*')) {\n      startStr = '\\n* ';\n    }\n    if (currentLineStr.startsWith('- [ ]') || currentLineStr.startsWith('- [X]') || currentLineStr.startsWith('- [x]')) {\n      startStr = '\\n- [ ] ';\n    }\n    if (/^\\d+.\\s/.test(currentLineStr)) {\n      startStr = \"\\n\" + (parseInt(currentLineStr) + 1) + \". \";\n    }\n    return insertTextAtPosition(target, startStr);\n  } else if (e.code && e.code.toLowerCase() === 'keyd' && e.ctrlKey) {\n    // Duplicate lines\n    stopPropagation(e);\n    var selection = {\n      start: target.selectionStart,\n      end: target.selectionEnd\n    };\n    var savedSelection = selection;\n    selection = selectLine({\n      text: target.value,\n      selection\n    });\n    var textToDuplicate = target.value.slice(selection.start, selection.end);\n    textArea.setSelectionRange({\n      start: selection.end,\n      end: selection.end\n    });\n    insertTextAtPosition(target, \"\\n\" + textToDuplicate);\n    textArea.setSelectionRange({\n      start: savedSelection.start,\n      end: savedSelection.end\n    });\n  } else if (e.code && e.code.toLowerCase() === 'arrowup' && e.altKey) {\n    handleLineMove(e, -1);\n  } else if (e.code && e.code.toLowerCase() === 'arrowdown' && e.altKey) {\n    handleLineMove(e, 1);\n  }\n}","map":{"version":3,"names":["insertTextAtPosition","insertBeforeEachLine","selectLine","TextAreaTextApi","stopPropagation","e","preventDefault","handleLineMove","direction","target","textArea","selection","start","selectionStart","end","selectionEnd","text","value","length","blockText","slice","prevLineSelection","prevLineText","setSelectionRange","nextLineSelection","nextLineText","handleKeyDown","tabSize","defaultTabEnable","starVal","substr","valArr","split","currentLineStr","code","toLowerCase","space","Array","join","_star","substring","_end","modifiedTextLine","forEach","item","idx","push","modifiedText","oldSelectText","newStarNum","indexOf","modifiedTextObj","shiftKey","map","replace","RegExp","replaceSelection","startTabSize","endTabSize","keyCode","test","startStr","startsWith","parseInt","ctrlKey","savedSelection","textToDuplicate","altKey"],"sources":["/Users/mubarakmuse/Abubakar-Islamic-Institute-LMS/node_modules/@uiw/react-md-editor/esm/components/TextArea/handleKeyDown.js"],"sourcesContent":["import { insertTextAtPosition } from \"../../utils/InsertTextAtPosition.js\";\nimport { insertBeforeEachLine, selectLine } from \"../../utils/markdownUtils.js\";\nimport { TextAreaTextApi } from \"../../commands/index.js\";\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\nfunction handleLineMove(e, direction) {\n  stopPropagation(e);\n  var target = e.target;\n  var textArea = new TextAreaTextApi(target);\n  var selection = {\n    start: target.selectionStart,\n    end: target.selectionEnd\n  };\n  selection = selectLine({\n    text: target.value,\n    selection\n  });\n  if (direction < 0 && selection.start <= 0 || direction > 0 && selection.end >= target.value.length) {\n    return;\n  }\n  var blockText = target.value.slice(selection.start, selection.end);\n  if (direction < 0) {\n    var prevLineSelection = selectLine({\n      text: target.value,\n      selection: {\n        start: selection.start - 1,\n        end: selection.start - 1\n      }\n    });\n    var prevLineText = target.value.slice(prevLineSelection.start, prevLineSelection.end);\n    textArea.setSelectionRange({\n      start: prevLineSelection.start,\n      end: selection.end\n    });\n    insertTextAtPosition(target, blockText + \"\\n\" + prevLineText);\n    textArea.setSelectionRange({\n      start: prevLineSelection.start,\n      end: prevLineSelection.start + blockText.length\n    });\n  } else {\n    var nextLineSelection = selectLine({\n      text: target.value,\n      selection: {\n        start: selection.end + 1,\n        end: selection.end + 1\n      }\n    });\n    var nextLineText = target.value.slice(nextLineSelection.start, nextLineSelection.end);\n    textArea.setSelectionRange({\n      start: selection.start,\n      end: nextLineSelection.end\n    });\n    insertTextAtPosition(target, nextLineText + \"\\n\" + blockText);\n    textArea.setSelectionRange({\n      start: nextLineSelection.end - blockText.length,\n      end: nextLineSelection.end\n    });\n  }\n}\nexport default function handleKeyDown(e, tabSize, defaultTabEnable) {\n  if (tabSize === void 0) {\n    tabSize = 2;\n  }\n  if (defaultTabEnable === void 0) {\n    defaultTabEnable = false;\n  }\n  var target = e.target;\n  var starVal = target.value.substr(0, target.selectionStart);\n  var valArr = starVal.split('\\n');\n  var currentLineStr = valArr[valArr.length - 1];\n  var textArea = new TextAreaTextApi(target);\n\n  /**\n   * `9` - `Tab`\n   */\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    var space = new Array(tabSize + 1).join('  ');\n    if (target.selectionStart !== target.selectionEnd) {\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      var modifiedTextLine = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      var modifiedText = modifiedTextLine.join('\\n');\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd\n      });\n      var modifiedTextObj = insertBeforeEachLine(modifiedText, e.shiftKey ? '' : space);\n      var text = modifiedTextObj.modifiedText;\n      if (e.shiftKey) {\n        text = text.split('\\n').map(item => item.replace(new RegExp(\"^\" + space), '')).join('\\n');\n      }\n      textArea.replaceSelection(text);\n      var startTabSize = e.shiftKey ? -tabSize : tabSize;\n      var endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\n      textArea.setSelectionRange({\n        start: newStarNum + startTabSize,\n        end: newStarNum + oldSelectText.length + endTabSize\n      });\n    } else {\n      return insertTextAtPosition(target, space);\n    }\n  } else if (e.keyCode === 13 && e.code.toLowerCase() === 'enter' && (/^(-|\\*)\\s/.test(currentLineStr) || /^\\d+.\\s/.test(currentLineStr)) && !e.shiftKey) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    var startStr = '\\n- ';\n    if (currentLineStr.startsWith('*')) {\n      startStr = '\\n* ';\n    }\n    if (currentLineStr.startsWith('- [ ]') || currentLineStr.startsWith('- [X]') || currentLineStr.startsWith('- [x]')) {\n      startStr = '\\n- [ ] ';\n    }\n    if (/^\\d+.\\s/.test(currentLineStr)) {\n      startStr = \"\\n\" + (parseInt(currentLineStr) + 1) + \". \";\n    }\n    return insertTextAtPosition(target, startStr);\n  } else if (e.code && e.code.toLowerCase() === 'keyd' && e.ctrlKey) {\n    // Duplicate lines\n    stopPropagation(e);\n    var selection = {\n      start: target.selectionStart,\n      end: target.selectionEnd\n    };\n    var savedSelection = selection;\n    selection = selectLine({\n      text: target.value,\n      selection\n    });\n    var textToDuplicate = target.value.slice(selection.start, selection.end);\n    textArea.setSelectionRange({\n      start: selection.end,\n      end: selection.end\n    });\n    insertTextAtPosition(target, \"\\n\" + textToDuplicate);\n    textArea.setSelectionRange({\n      start: savedSelection.start,\n      end: savedSelection.end\n    });\n  } else if (e.code && e.code.toLowerCase() === 'arrowup' && e.altKey) {\n    handleLineMove(e, -1);\n  } else if (e.code && e.code.toLowerCase() === 'arrowdown' && e.altKey) {\n    handleLineMove(e, 1);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}