{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { insertTextAtPosition } from \"../utils/InsertTextAtPosition.js\";\nimport { bold } from \"./bold.js\";\nimport { code, codeBlock } from \"./code.js\";\nimport { comment } from \"./comment.js\";\nimport { divider } from \"./divider.js\";\nimport { fullscreen } from \"./fullscreen.js\";\nimport { group } from \"./group.js\";\nimport { hr } from \"./hr.js\";\nimport { image } from \"./image.js\";\nimport { italic } from \"./italic.js\";\nimport { link } from \"./link.js\";\nimport { checkedListCommand, orderedListCommand, unorderedListCommand } from \"./list.js\";\nimport { codeEdit, codeLive, codePreview } from \"./preview.js\";\nimport { quote } from \"./quote.js\";\nimport { strikethrough } from \"./strikeThrough.js\";\nimport { title } from \"./title.js\";\nimport { title1 } from \"./title1.js\";\nimport { title2 } from \"./title2.js\";\nimport { title3 } from \"./title3.js\";\nimport { title4 } from \"./title4.js\";\nimport { title5 } from \"./title5.js\";\nimport { title6 } from \"./title6.js\";\nimport { table } from \"./table.js\";\nimport { issue } from \"./issue.js\";\nimport { help } from \"./help.js\";\nvar getCommands = () => [bold, italic, strikethrough, hr, group([title1, title2, title3, title4, title5, title6], {\n  name: 'title',\n  groupName: 'title',\n  buttonProps: {\n    'aria-label': 'Insert title',\n    title: 'Insert title'\n  }\n}), divider, link, quote, code, codeBlock, comment, image, table, divider, unorderedListCommand, orderedListCommand, checkedListCommand, divider, help];\nvar getExtraCommands = () => [codeEdit, codeLive, codePreview, divider, fullscreen];\nfunction getStateFromTextArea(textArea) {\n  var _textArea$value;\n  return {\n    selection: {\n      start: textArea.selectionStart,\n      end: textArea.selectionEnd\n    },\n    text: textArea.value,\n    selectedText: (_textArea$value = textArea.value) == null ? void 0 : _textArea$value.slice(textArea.selectionStart, textArea.selectionEnd)\n  };\n}\nclass TextAreaTextApi {\n  constructor(textArea) {\n    this.textArea = void 0;\n    this.textArea = textArea;\n  }\n\n  /**\n   * Replaces the current selection with the new text. This will make the new selectedText to be empty, the\n   * selection start and selection end will be the same and will both point to the end\n   * @param text Text that should replace the current selection\n   */\n  replaceSelection(text) {\n    insertTextAtPosition(this.textArea, text);\n    return getStateFromTextArea(this.textArea);\n  }\n\n  /**\n   * Selects the specified text range\n   * @param selection\n   */\n  setSelectionRange(selection) {\n    this.textArea.focus();\n    this.textArea.selectionStart = selection.start;\n    this.textArea.selectionEnd = selection.end;\n    return getStateFromTextArea(this.textArea);\n  }\n}\nclass TextAreaCommandOrchestrator {\n  constructor(textArea) {\n    this.textArea = void 0;\n    this.textApi = void 0;\n    this.textArea = textArea;\n    this.textApi = new TextAreaTextApi(textArea);\n  }\n  getState() {\n    if (!this.textArea) return false;\n    return getStateFromTextArea(this.textArea);\n  }\n  executeCommand(command, dispatch, state, shortcuts) {\n    command.execute && command.execute(_extends({\n      command\n    }, getStateFromTextArea(this.textArea)), this.textApi, dispatch, state, shortcuts);\n  }\n}\nexport { title, title1, title2, title3, title4, title5, title6, bold, codeBlock, comment, italic, strikethrough, hr, group, divider, link, quote, code, image, unorderedListCommand, orderedListCommand, checkedListCommand, table, issue, help, codeEdit, codeLive, codePreview, fullscreen,\n// Tool method.\ngetCommands, getExtraCommands, getStateFromTextArea, TextAreaCommandOrchestrator, TextAreaTextApi };","map":{"version":3,"names":["_extends","insertTextAtPosition","bold","code","codeBlock","comment","divider","fullscreen","group","hr","image","italic","link","checkedListCommand","orderedListCommand","unorderedListCommand","codeEdit","codeLive","codePreview","quote","strikethrough","title","title1","title2","title3","title4","title5","title6","table","issue","help","getCommands","name","groupName","buttonProps","getExtraCommands","getStateFromTextArea","textArea","_textArea$value","selection","start","selectionStart","end","selectionEnd","text","value","selectedText","slice","TextAreaTextApi","constructor","replaceSelection","setSelectionRange","focus","TextAreaCommandOrchestrator","textApi","getState","executeCommand","command","dispatch","state","shortcuts","execute"],"sources":["/Users/mubarakmuse/Abubakar-Islamic-Institute-LMS/node_modules/@uiw/react-md-editor/esm/commands/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport { insertTextAtPosition } from \"../utils/InsertTextAtPosition.js\";\nimport { bold } from \"./bold.js\";\nimport { code, codeBlock } from \"./code.js\";\nimport { comment } from \"./comment.js\";\nimport { divider } from \"./divider.js\";\nimport { fullscreen } from \"./fullscreen.js\";\nimport { group } from \"./group.js\";\nimport { hr } from \"./hr.js\";\nimport { image } from \"./image.js\";\nimport { italic } from \"./italic.js\";\nimport { link } from \"./link.js\";\nimport { checkedListCommand, orderedListCommand, unorderedListCommand } from \"./list.js\";\nimport { codeEdit, codeLive, codePreview } from \"./preview.js\";\nimport { quote } from \"./quote.js\";\nimport { strikethrough } from \"./strikeThrough.js\";\nimport { title } from \"./title.js\";\nimport { title1 } from \"./title1.js\";\nimport { title2 } from \"./title2.js\";\nimport { title3 } from \"./title3.js\";\nimport { title4 } from \"./title4.js\";\nimport { title5 } from \"./title5.js\";\nimport { title6 } from \"./title6.js\";\nimport { table } from \"./table.js\";\nimport { issue } from \"./issue.js\";\nimport { help } from \"./help.js\";\nvar getCommands = () => [bold, italic, strikethrough, hr, group([title1, title2, title3, title4, title5, title6], {\n  name: 'title',\n  groupName: 'title',\n  buttonProps: {\n    'aria-label': 'Insert title',\n    title: 'Insert title'\n  }\n}), divider, link, quote, code, codeBlock, comment, image, table, divider, unorderedListCommand, orderedListCommand, checkedListCommand, divider, help];\nvar getExtraCommands = () => [codeEdit, codeLive, codePreview, divider, fullscreen];\nfunction getStateFromTextArea(textArea) {\n  var _textArea$value;\n  return {\n    selection: {\n      start: textArea.selectionStart,\n      end: textArea.selectionEnd\n    },\n    text: textArea.value,\n    selectedText: (_textArea$value = textArea.value) == null ? void 0 : _textArea$value.slice(textArea.selectionStart, textArea.selectionEnd)\n  };\n}\nclass TextAreaTextApi {\n  constructor(textArea) {\n    this.textArea = void 0;\n    this.textArea = textArea;\n  }\n\n  /**\n   * Replaces the current selection with the new text. This will make the new selectedText to be empty, the\n   * selection start and selection end will be the same and will both point to the end\n   * @param text Text that should replace the current selection\n   */\n  replaceSelection(text) {\n    insertTextAtPosition(this.textArea, text);\n    return getStateFromTextArea(this.textArea);\n  }\n\n  /**\n   * Selects the specified text range\n   * @param selection\n   */\n  setSelectionRange(selection) {\n    this.textArea.focus();\n    this.textArea.selectionStart = selection.start;\n    this.textArea.selectionEnd = selection.end;\n    return getStateFromTextArea(this.textArea);\n  }\n}\nclass TextAreaCommandOrchestrator {\n  constructor(textArea) {\n    this.textArea = void 0;\n    this.textApi = void 0;\n    this.textArea = textArea;\n    this.textApi = new TextAreaTextApi(textArea);\n  }\n  getState() {\n    if (!this.textArea) return false;\n    return getStateFromTextArea(this.textArea);\n  }\n  executeCommand(command, dispatch, state, shortcuts) {\n    command.execute && command.execute(_extends({\n      command\n    }, getStateFromTextArea(this.textArea)), this.textApi, dispatch, state, shortcuts);\n  }\n}\nexport { title, title1, title2, title3, title4, title5, title6, bold, codeBlock, comment, italic, strikethrough, hr, group, divider, link, quote, code, image, unorderedListCommand, orderedListCommand, checkedListCommand, table, issue, help, codeEdit, codeLive, codePreview, fullscreen,\n// Tool method.\ngetCommands, getExtraCommands, getStateFromTextArea, TextAreaCommandOrchestrator, TextAreaTextApi };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}